# ДЗ №1

# a = int(input("Введите первое целое число"))
# b = int(input("Введите второе челое число"))
# c = str(input("Введите строку"))
# d = float(input("Введите одно дробное число"))
#
# print(c)
#
# print(a + b + d)


# ДЗ №2 Калькулятор
#
# a = float(input('Введите первое число: '))
# print(a)
# b = input('Введите операцию (+, -, *, /, **, //, %): ')
# print(b)
# c = float(input('Введите второе число: '))
# print(c)
# if b == ('+'):
#     otvet = a + c
# elif b == ('-'):
#     otvet = a - c
# elif b == ('*'):
#     otvet = a * c
# elif b == ('/'):
#     otvet = a / c
# elif b == ('**'):
#     otvet = a ** c
# elif b == ('//'):
#     otvet = a // c
# elif b == ('%'):
#     otvet = a % c
#
# print('Ответ: ', otvet)

# ДЗ №3 Строки

# a = str(123456789)
#
# print('1 ответ:', a[2])        #1 третий символ  строки
# print('2 ответ:',a[-2])        #2 предпоследний символ строки
# print('3 ответ:',a[0:5])       #3 первые пять символов строки
# print('4 ответ:',a[:-2])       #4 вся строка, кроме последних двух символов
# print('5 ответ:',a[::2])       #5 все символы с четными индексами (считая, что индексация начинается с 0, поэтому символы выводятся начиная с первого)
# print('6 ответ:',a[1::2])      #6 все символы с нечетными индексами, то есть начиная со второго символа строки
# print('7 ответ:',a[::-1])      #7 все символы в обратном порядке
# print('8 ответ:',a[::-2])      #8 все символы строки через один в обратном порядке, начиная с последнего
# print('9 ответ:',len(a))       #9 длина строки

# ДЗ №4 Цикл for

# №1 Перемножить все нечётные значения в диапазоне от 1 до 100
# a = range(1, 21)
# b = 1
# for i in a:
#     if i % 2 != 0:
#         print(i)
#         b = b*i
# print('Произведение чисел заданного интервала: ', b)

# №2 Записать в массив все числа в диапазоне от 1 до 500 кратные 5

# a = range(1, 21)
# b = []
# for i in a:
#     if i % 5 ==0:
#         print(i)
#         b.append(i)
# print(b)

# №3 Вывести на экран все чётные значения в диапазоне от 1 до 497
#
# a = range(1, 21)
# b = []
# for i in a:
#     if i % 2 == 0:
#         print(i, end=' ')  #Диана, у меня здесь вопрос, почему в принт добавляю енд, и последний принт выводит в ту же строку, хотя он не тело цикла?
#         b.append(i)
# # print ()
# # print(b)

# №4 Дан массив чисел. Если число встречается более двух раз, то добавить его в новый массив

# c = [1, 2, 3, 3, 4, 5, 3]
# d = []
# for i in c:
#     if c.count(i) > 2:
#         d.append(i)
#         break
# print(d)

# ДЗ №5 Цикл while. Калькулятор

# a = float(input('Введите первое число: '))
# # print(a)
# c = float(input('Введите второе число: '))
# # print(c)
#
# while True:
#     b = input('Введите операцию (+, -, *, /, **, //, %, 0): ')
#     if b == ('+'):
#         otvet = a + c
#     elif b == ('-'):
#         otvet = a - c
#     elif b == ('*'):
#         otvet = a * c
#     elif b == ('/') and c == 0:
#         otvet = 'На ноль делить нельзя!'
#     elif b == ('/'):
#         otvet = a / c
#     elif b == ('**'):
#         otvet = a ** c
#     elif b == ('//') and c == 0:
#         otvet = 'На ноль делить нельзя!'
#     elif b == ('//'):
#         otvet = a // c
#     elif b == ('%') and c == 0:
#         otvet = 'На ноль делить нельзя!'
#     elif b == ('%'):
#         otvet = a % c
#     elif b == ('0'):      #else:
#         print('Осуществлен выход из цикла')
#         break
#     print('Ответ: ', otvet)

# ДЗ №6 Списки

# a = [4, 6, 'pу', 'tell', 78]
# b = [44, 'hello', 56, 'exept', 3]

# # Объединить два списка
# c = a + b
# print(c)
#
# a.extend(b)
# print(a)
# #
# # Добавьте элемент 6 на 3 индекс в объединённом списке
#
# a.insert(3, 6)
# print(a)
#
# # Посчитайте количество элементов списка в объединённом списке
#
# print(len(a))
#
# # Удалите все текстовые переменные в объединённом списке
#
# for i in a:
#     if i == str(i):
#         # i += 1
#         a.remove(i)
# print(a)
#
# a = [4, 6, 'py', 'tell', 78]
# b = [44, 'hello', 56, 'exept', 3]
# a.extend(b)
# a.insert(3,6)
# print(a)
# for i in a:
#     if str(i).isalpha():
#         a.remove(i)
# print(a)
# l = len(a)

# ДЗ №7 Казино

# import random
#
# a = random.randint(1, 10)
# b = random.randint(1, 2)
# print(a)
# print(b)
# if b == 1:                           # привязали второй рандом к цвету
#     b = 'красный'
# else:
#     b = 'черный'
# print(b)
# i = 0
# while i != 5:
#     i += 1
#     ch = int(input('Ваша ставка, число: '))
#     cv = input('Ваша ставка, цвет: ')
#     cv = cv.lower()                           # привели ввод к нижнему регистру
#     if ch == a and cv == b:
#         print('Сектор приз на барабане!')
#         break
#     elif ch != a or cv != b:
#         continue
# else:
#     print('Увы, Вы не угадали, загаданное число было: ', a, '\n' 'Цвета: ', b)

# ДЗ №8 Кортежи

# Задание №1
# Найти самое длинное слово в строке.
# Задание №2
# Преобразовать текст в кортеж слов с удалением знаков препинания.
#
# tx = 'Переживи всех. Переживи вновь, словно они - снег, пляшущий снег снов.'
# a = '.,?!-()/;:'
# tx1 = ''.join(x for x in tx if x not in a)
# tx2 = tuple(str(i) for i in tx1.split(' '))
# print(tx2)
#
# tx3 = tuple(str(i) for i in tx.split(' '))
# # print(tx3)
# print('Самое длинное первое слово в тексте: ', max(tx3, key=len))


# ДЗ №9 Магазин

# У вас есть словарь, где ключ – название продукта. Значение – список, который содержит цену и кол-во товара.
# Выведите через ‘’–’’ название – цену – количество.
# С клавиатуры вводите название товара и его кол-во. n – выход из программы.
# Посчитать цену выбранных товаров и сколько товаров осталось в изначальном списке.

# shop = {'bread': [1.5, 40], 'milk': [2, 30], 'eggs': [3, 20]} # цена за штуку!
# print('Каталог товаров магазина: ')
# for key in shop:
#     print('Наименование товара: ',key, '-','По цене, руб./шт: ',shop[key][0], '-', 'Количество шт.: ', shop[key][1])
# print('При покупке от 10 шт. скидка 50%!')
# p = input('Здравствуйте! Вам пакет нужен? ')
# p = p.lower()  # все опустила до нижнего регистра
# # pack = 0.2     # цена пакетика
# basket = 0  # счетчик для корзины
# s = 1           #счетчик для суммы одного прохода цикла, и каждый раз сумму добавляем в корзину
# while True:
#     a = input('Введите название выбранного товара (продукта): ')
#     a = a.lower()    #все опустила до нижнего регистра
#     if a == 'exit':         #выход из цикла, покинули магазин
#         break
#     if a not in shop:           #исключили неправильность ввода
#         print('Введенного товара нет в магазине! Проверьте правильность ввода, спасибо, ')
#         continue
#     b = int(input('Введите требуемое количество товара (продукта): '))
#     if b > shop[a][1]:                      #на случай если сразу ввели количество больше имеющегося
#         print('Требуемое количество недостпуно! Доступно', shop[a][1], 'шт.')
#         continue
#     shop[a][1] -= b                             #отнимает от каталога купленное количество товара
#     if shop[a][1] < 0:                          #если по мере покупок закончился товар
#         print('Требуемое количество недостпуно! Доступно', shop[a][1], 'шт.')
#     s = shop[a][0] * b    #сумма одного прохода цикла
#     if b >= 10:               #типа скидка, целых 50%, чтоб удобно считать
#         s *= 0.5
#     basket += s
# if p == 'yes':                #не забыли посчитать пакетик
#     basket += pack
# d = input('У Вас есть дисконтная карта нашего магазина? ')
# d = d.lower()  # все опустила до нижнего регистра
# basket1 = 1       #корзина для учета дисконта
# if d == 'yes':
#     basket1 = basket * 0.99   #корзина с учетом дисконта
#     print('Сумма покупки составляет: ', basket1, 'бел. руб.', '\n', 'Спасибо за покупку. Ждем Вас снова!')
# else:
#     print('Сумма покупки составляет: ', basket, 'бел. руб.', '\n', 'Спасибо за покупку. Ждем Вас снова!')
# print('Товары доступны к слудующей покупке: ')
# for key in shop:
#     print('Наименование товара: ',key, '-','По цене, руб./шт: ',shop[key][0], '-', 'Количество шт.: ', shop[key][1])

# Ввод с клавиатуры. Если строка введённая с клавиатуры – это числа,
# то поделить первое на второе. Обработать ошибку деления на ноль.
# Если второе число 0, то программа запрашивает ввод чисел заново.
# Также если были введены буквы, то обработать исключение.

# a1 = 0
# b1 = 0
# while True:
#     a = input('Требуется ввод двух чисел. Первое число: ')
#     try:
#         a = int(a)
#     except ValueError:
#         a = int(input('Введите именно числовое значение: '))
#     a1 += int(a)
#     b = input('Требуется ввод двух чисел. Втрое число: ')
#     try:
#         b = int(b)
#     except ValueError:
#         b = int(input('Введите именно числовое значение: '))
#     b1 += int(b)
#     try:
#         a1/b1
#     except ZeroDivisionError:
#         b = int(input('Введите число отличное от 0: '))
#         b1 += int(b)
#     if a1 > 0 and b1 > 0:
#         break
# print('Результат деления двух чисел: ', a1/b1)


# Создать текстовый файл, записать в него построчно данные,
# которые вводит пользователь. Окончанием ввода пусть служит пустая строка

# with open('dz.txt', 'r+', encoding='utf-8') as f:
#     while True:
#         a = input('Введите данные текстового и числового типа: ')
#         f.write(a)
#         f.write('\n')
#         if a == '':
#             break
#     s = f.readlines()
# print(s)
# with open('dz.txt', 'r+', encoding='utf-8') as f:
#     s = f.readlines()
# print(s)
# s_new = []
# for i in s:
#     i = i.replace('\n', '')
#     s_new.append(i)
# print(s_new)

# s_num = []
# s_b = []
# for i in s:
#     i = i.replace('\n', '')
#     if i.isdigit():
#         s_num.append(int(i))
#     elif i.isalpha():
#         s_b.append(i)
# print(s_num, s_b)
# s_num.sort()
# print(s_num)
# s_b.sort(key=len)
# print(s_b)

# Есть список состоящий из слов и чисел,
# нужно записать в файл сначала слова в порядке их длины,
# а после слов цифры в порядке возрастания.

# s = [1, 'rthtr', 5, 'fgh', 3, 'as', 25]
# n = []
# b = []
# for i in s:
#     try:
#         i = int(i)
#     except ValueError:
#         b.append(i)
#     else:
#         n.append(i)
# n.sort()
# b.sort(key=len)
# b = ' '.join(b)
# n = str(n).strip('[]')              # запомнить!
# # n = str(n)
# b = str(b)
# with open('dz.txt', 'r+', encoding='utf-8') as f:
#     f.write(b)
#     f.write('\n')
#     f.write(n)
#     s = f.readlines()
# print(s)
# with open('dz.txt', 'r+', encoding='utf-8') as f:
#     s = f.readlines()
# print(s)
# s_new = []
# for i in s:
#     i = i.replace('\n', '')
#     s_new.append(i)
# print(s_new)


# Простейший калькулятор c введёнными двумя числами вещественного типа.
# Ввод с клавиатуры: операции + - * / и два числа. Операции являются функциями.
# Обработать ошибку: “Деление на ноль”
# Ноль использовать в качестве завершения программы (сделать как отдельную операцию).


# def summa(a, b):
#     return a + b
#
#
# def raznica(a, b):
#     return a - b
#
#
# def proizv(a, b):
#     return a * b
#
#
# def delen(a, b):
#     return a / b
#
#
# def step(a, b):
#     return a ** b
#
#
# def celoe(a, b):
#     return a // b
#
#
# while True:
#     a = float(input('Введите первое числовое значение: '))
#     if a == 0:
#         print('Осуществлен выход из программы!')
#         break
#     b = float(input('Введите второе числовое значение: '))
#     c = input('Введите требуемую операцию (+, -, *, /, **, //): ')
#     if c == '+':
#         print('Ответ: ', summa(a, b))
#     elif c == '-':
#         print('Ответ: ', raznica(a, b))
#     elif c == '*':
#         print('Ответ: ', proizv(a, b))
#     elif c == '/':
#         try:
#             a / 0
#         except ZeroDivisionError:
#             b = int(input('Делить на 0 нельзя! Введите число отличное от 0: '))
#             if b == 0:
#                 print('Осуществлен выход из программы!')
#                 break
#         print('Ответ: ',delen(a, b))
#     elif c == '**':
#         print('Ответ: ',step(a, b))
#     elif c == '//':
#         try:
#             a // 0
#         except ZeroDivisionError:
#             b = int(input('Делить на 0 нельзя! Введите число отличное от 0: '))
#             if b == 0:
#                 print('Осуществлен выход из программы!')
#                 break
#         print('Ответ: ',celoe(a, b))

# Если в функцию передаётся кортеж, то посчитать длину всех его слов.
# Если список, то посчитать кол-во букв и чисел в нём.
# Число – кол-во нечётных цифр.
# Строка – кол-во букв.
# Сделать проверку со всеми этими случаями.

# def my_func(x):
#     if type(x) is str:
#         print('Количество букв в строке: ', len(x))
#         print('____________________________________')
#     elif type(x) is int:
#         x = str(x)
#         nch = []
#         for i in x:
#             if int(i) % 2 != 0:
#                 nch.append(i)
#         print('Количество нечетных цифр в числе: ', len(nch))
#         print('____________________________________')
#     elif type(x) is list:
#         num = []
#         b = []
#         for i in x:
#             try:
#                 i = int(i)
#             except ValueError:
#                 b.append(i)
#             else:
#                 num.append(i)
#         b = ' '.join(b)
#         b = b.replace(' ', '')
#         print('Количество чисел в списке: ', len(num))
#         print('Количество букв в списке: ', len(b))
#         print('____________________________________')
#     elif type(x) is tuple:
#         b = []
#         for i in x:
#             try:
#                 i = int(i)
#             except ValueError:
#                 b.append(i)
#         print('Количество слов в кортеже: ', len(b))
#         b = ' '.join(b)
#         b = b.replace(' ', '')
#         print('Суммарная длина всех слов кортежа: ', len(b), 'букв')
#         print('____________________________________')
#
#
# my_func('zste')
# my_func(1233458)
# my_func([12, 'ef', 148, 'zre'])
# my_func((12, 'sdf', 148, 'erty'))

# Калькулятор.
# Создайте класс, где реализованы функции(методы) математических операций.
# А также функция, для ввод данных.
# class Calculator:
#     def __init__(self, a, b):
#         self.a = a
#         self.b = b
#
#     def summa(self):
#         return self.a + self.b
#
#     def raznica(self):
#         return self.a - self.b
#
#     def proizv(self):
#         return self.a * self.b
#
#     def delen(self):
#         return self.a / self.b
#
#     def step(self):
#         return self.a ** self.b
#
#     def celoe(self):
#         return self.a // self.b
#
# while True:
#     a = float(input('Введите первое числовое значение: '))
#     if a == 0:
#         print('Осуществлен выход из программы!')
#         break
#     b = float(input('Введите второе числовое значение: '))
#     c = input('Введите требуемую операцию (+, -, *, /, **, //): ')
#     object = Calculator(a, b)
#     if c == '+':
#         print('Ответ: ', object.summa())
#     elif c == '-':
#         print('Ответ: ', object.raznica())
#     elif c == '*':
#         print('Ответ: ', object.proizv())
#     elif c == '/':
#         if b == 0:
#             try:
#                 a / 0
#             except ZeroDivisionError:
#                  b = int(input('Делить на 0 нельзя! Введите число отличное от 0: '))
#                  if b == 0:
#                     print('Осуществлен выход из программы!')
#                     break
#         print('Ответ: ', object.delen())
#     elif c == '**':
#         print('Ответ: ', object.step())
#     elif c == '//':
#         if b == 0:
#              try:
#                  a // 0
#              except ZeroDivisionError:
#                 b = int(input('Делить на 0 нельзя! Введите число отличное от 0: '))
#                 if b == 0:
#                     print('Осуществлен выход из программы!')
#                     break
#         print('Ответ: ',  object.celoe())

# Класс Alphabet
# 1. Создайте класс Alphabet
# 2. Создайте метод __init__(), внутри которого будут определены два динамических свойства: +
# 1) lang - язык и 2) letters - список букв. Начальные значения свойств берутся из входных параметров метода. +
# 3. Создайте метод print(), который выведет в консоль буквы алфавита +
# 4. Создайте метод letters_num(), который вернет количество букв в алфавите  +
import string

class Alphabet:
    def __init__(self, lang, letters):
        self.lang = lang
        self.letters = list(letters)

    def print(self):         #выведет в консоль буквы алфавита
        print(self.letters)

    def letters_num(self):            #количество букв в алфавите
        print(len(self.letters))

# Класс EngAlphabet
# 1. Создайте класс EngAlphabet путем наследования от класса Alphabet
# 2. Создайте метод __init__(), внутри которого будет вызываться родительский метод __init__().    +
# В качестве параметров ему будут передаваться обозначение языка(например, 'En') и строка,    +
# состоящая из всех букв алфавита(можно воспользоваться свойством ascii_uppercase из модуля string).    +
# 3. Добавьте приватное статическое свойство __letters_num, которое будет хранить количество букв в алфавите. +
# 4. Создайте метод is_en_letter(), который будет принимать букву в качестве параметра и определять,
# относится ли эта буква к английскому алфавиту.   +
# 5. Переопределите метод letters_num() - пусть в текущем классе классе он будет возвращать значение свойства __letters_num.+
# 6. Создайте статический метод example(), который будет возвращать пример текста на английском языке.+

class EngAlphabet(Alphabet):
    def __init__(self):
        super().__init__('En', string.ascii_uppercase)            #переопределяем родительский метод

    __letters_num = 26                       #приватное статическое свойство, кол. букв

    def is_en_letter(self, letter):   #принимать букву в качестве параметра и определять,относится ли эта буква к английскому алфавиту
        if letter in  self.letters:
            return (True)
        return (False)

    def letters_num(self):                       #переопредетяет значение свойства __letters_num в значения из класса-потомка
        return EngAlphabet.__letters_num

    @staticmethod              #статический метод,  возвращать пример текста на английском языке
    def example():
        print('qwert')

# Тесты:
# 1. Создайте объект класса EngAlphabet  +
# 2. Напечатайте буквы алфавита для этого объекта  +
# 3. Выведите количество букв в алфавите +
# 4. Проверьте, относится ли буква F к английскому алфавиту +
# 5. Проверьте, относится ли буква Щ к английскому алфавиту +
# 6. Выведите пример текста на английском языке

object_En = EngAlphabet()
object_En.print()                          #в самом методе работает принт, поэтому выводим без принта!
print(object_En.letters_num())
print(object_En.is_en_letter('F'))
print(object_En.is_en_letter('Щ'))
object_En.example()